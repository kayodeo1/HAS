<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:of="http://omnifaces.org/functions">

<h:head>
	<f:metadata>
	</f:metadata>
</h:head>

<h:body>
	<ui:composition template="/online/templates/master.xhtml">
		<ui:define name="pageTitle">
            Hostel Application
        </ui:define>

		<ui:define name="body_">
			<style>
.hostel-container {
	min-height: 100vh;
	background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
	padding: 2rem 1rem;
	display: flex;
	align-items: center;
	justify-content: center;
}

.hostel-form {
	background: white;
	border-radius: 16px;
	padding: 2.5rem;
	box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px
		rgba(0, 0, 0, 0.04);
	width: 100%;
	max-width: 700px;
	position: relative;
}

.form-header {
	text-align: center;
	margin-bottom: 2.5rem;
	padding-bottom: 1.5rem;
	border-bottom: 2px solid #f1f5f9;
}

.form-title {
	font-size: 2rem;
	font-weight: 700;
	color: #1e293b;
	margin-bottom: 0.5rem;
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
}

.form-title:before {
	content: "üè†";
	font-size: 1.5rem;
}

.form-subtitle {
	color: #64748b;
	font-size: 1rem;
	line-height: 1.5;
}

.disclaimer {
	background: #fff7ed;
	border: 1px solid #fed7aa;
	border-radius: 8px;
	padding: 1rem;
	margin-bottom: 2rem;
	font-size: 0.9rem;
	color: #9a3412;
	display: flex;
	align-items: flex-start;
	gap: 0.5rem;
}

.disclaimer:before {
	content: "‚ö†Ô∏è";
	font-size: 1rem;
	flex-shrink: 0;
	margin-top: 0.1rem;
}

.form-grid {
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 1.75rem;
	margin-bottom: 2rem;
}

.form-field {
	display: flex;
	flex-direction: column;
	position: relative;
}

.form-field.full-width {
	grid-column: 1/-1;
}

.form-label {
	font-size: 0.875rem;
	font-weight: 600;
	color: #374151;
	margin-bottom: 0.5rem;
	display: flex;
	align-items: center;
	gap: 0.25rem;
}

.required-asterisk {
	color: #ef4444;
	font-weight: 700;
}

.input-wrapper {
	position: relative;
	display: flex;
	flex-direction: column;
}

.ui-inputfield, .ui-selectonemenu {
	width: 100% !important;
	height: 48px !important;
	padding: 0.75rem 1rem !important;
	border: 2px solid #e2e8f0 !important;
	border-radius: 8px !important;
	font-size: 0.95rem !important;
	font-weight: 500 !important;
	color: #1e293b !important;
	background: white !important;
	transition: all 0.2s ease-in-out !important;
	box-sizing: border-box !important;
}

.ui-inputfield:focus, .ui-selectonemenu:focus {
	border-color: #667eea !important;
	box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1) !important;
	outline: none !important;
	transform: translateY(-1px);
}

.ui-inputfield:hover:not(:focus), .ui-selectonemenu:hover:not(:focus) {
	border-color: #cbd5e1 !important;
}

.ui-selectonemenu-trigger {
	border-left: 2px solid #e2e8f0 !important;
	background: #f8fafc !important;
	height: 100% !important;
	display: flex !important;
	align-items: center !important;
	justify-content: center !important;
	border-radius: 0 6px 6px 0 !important;
	width: 40px !important;
}

.ui-selectonemenu-label {
	padding: 0.75rem 1rem !important;
	line-height: 1.2 !important;
	color: #1e293b !important;
	font-weight: 500 !important;
}

.ui-selectonemenu-label.ui-selectonemenu-label-placeholder {
	color: #94a3b8 !important;
	font-weight: 400 !important;
}

.readonly-field {
	background: #f8fafc !important;
	color: #6b7280 !important;
	cursor: not-allowed !important;
	border-color: #e5e7eb !important;
}

.readonly-field:hover, .readonly-field:focus {
	border-color: #e5e7eb !important;
	box-shadow: none !important;
	transform: none !important;
}

/* Amount display styling */
.amount-display {
	background: linear-gradient(135deg, #ecfdf5 0%, #f0fdf4 100%) !important;
	border-color: #10b981 !important;
	color: #065f46 !important;
	font-weight: 700 !important;
	font-size: 1.1rem !important;
	text-align: center !important;
}

.amount-display:hover, .amount-display:focus {
	border-color: #10b981 !important;
	box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1) !important;
	transform: none !important;
}

/* Message styling */
.ui-messages {
	padding: 0;
	margin: 0.5rem 0 0 0;
}

.ui-messages-error, .ui-messages-info, .ui-messages-warn,
	.ui-messages-fatal {
	border: none;
	background: none;
	padding: 0;
	margin: 0;
}

.ui-messages-error-summary, .ui-messages-info-summary,
	.ui-messages-warn-summary, .ui-messages-fatal-summary {
	background: #fef2f2 !important;
	color: #dc2626 !important;
	border: 1px solid #fecaca !important;
	border-radius: 6px !important;
	padding: 0.5rem 0.75rem !important;
	font-size: 0.8125rem !important;
	font-weight: 500 !important;
	display: flex !important;
	align-items: center !important;
	gap: 0.375rem !important;
	margin: 0 !important;
	animation: slideDown 0.3s ease-out;
}

.ui-messages-error-summary:before {
	content: "‚ö†Ô∏è";
	font-size: 0.875rem;
}

@
keyframes slideDown {from { opacity:0;
	transform: translateY(-10px);
}

to {
	opacity: 1;
	transform: translateY(0);
}

}
.ui-state-error {
	border-color: #ef4444 !important;
	background: #fef2f2 !important;
}

.ui-state-error:focus {
	border-color: #dc2626 !important;
	box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1) !important;
}

/* Payment section styling */
.payment-section {
	background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
	border: 2px dashed #cbd5e1;
	border-radius: 12px;
	padding: 2rem;
	text-align: center;
	margin-top: 2rem;
}

.payment-title {
	font-size: 1.25rem;
	font-weight: 600;
	color: #1e293b;
	margin-bottom: 1rem;
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
}

.payment-title:before {
	content: "üí≥";
	font-size: 1.25rem;
}

.payment-btn {
	background: linear-gradient(135deg, #10b981 0%, #059669 100%) !important;
	color: white !important;
	padding: 1rem 3rem !important;
	border: none !important;
	border-radius: 8px !important;
	font-weight: 600 !important;
	font-size: 1rem !important;
	cursor: pointer !important;
	transition: all 0.2s ease-in-out !important;
	box-shadow: 0 4px 14px 0 rgba(16, 185, 129, 0.3) !important;
	display: flex !important;
	align-items: center !important;
	gap: 0.5rem !important;
	min-width: 250px !important;
	justify-content: center !important;
	margin: 0 auto !important;
}

.payment-btn:hover {
	transform: translateY(-2px) !important;
	box-shadow: 0 8px 25px 0 rgba(16, 185, 129, 0.4) !important;
	background: linear-gradient(135deg, #059669 0%, #047857 100%) !important;
}

.payment-btn:active {
	transform: translateY(0) !important;
}

.payment-btn:disabled {
	background: #9ca3af !important;
	cursor: not-allowed !important;
	transform: none !important;
	box-shadow: none !important;
}

.payment-note {
	font-size: 0.875rem;
	color: #6b7280;
	margin-top: 1rem;
	font-style: italic;
}

/* Responsive Design */
@media ( max-width : 768px) {
	.hostel-container {
		padding: 1rem;
	}
	.hostel-form {
		padding: 2rem 1.5rem;
		margin: 0;
		border-radius: 12px;
	}
	.form-grid {
		grid-template-columns: 1fr;
		gap: 1.5rem;
	}
	.form-field.full-width {
		grid-column: 1;
	}
	.form-title {
		font-size: 1.5rem;
	}
	.payment-section {
		padding: 1.5rem;
	}
	.payment-btn {
		width: 100% !important;
		min-width: auto !important;
	}
}

@media ( max-width : 480px) {
	.hostel-form {
		padding: 1.5rem 1rem;
		border-radius: 8px;
	}
	.form-header {
		margin-bottom: 2rem;
		padding-bottom: 1rem;
	}
	.form-title {
		font-size: 1.25rem;
	}
	.ui-inputfield, .ui-selectonemenu {
		height: 44px !important;
		font-size: 0.9rem !important;
		padding: 0.625rem 0.875rem !important;
	}
	.form-grid {
		gap: 1.25rem;
		margin-bottom: 1.5rem;
	}
	.payment-section {
		padding: 1rem;
		margin-top: 1.5rem;
	}
	.payment-btn {
		padding: 0.875rem 2rem !important;
		font-size: 0.95rem !important;
	}
}

/* Form animation */
.hostel-form {
	animation: fadeInUp 0.6s ease-out;
}

@
keyframes fadeInUp {from { opacity:0;
	transform: translateY(50px);
}

to {
	opacity: 1;
	transform: translateY(0);
}

}
.form-field {
	transition: transform 0.2s ease;
}

.form-field:focus-within {
	transform: translateY(-1px);
}
</style>


			<div class="hostel-form">
				<div class="form-header">
					<h1 class="form-title">Hostel Application</h1>
					<p class="form-subtitle">Apply for hostel accommodation for the
						academic session</p>
				</div>

				<div class="disclaimer">
					<span><strong>Please Note:</strong> Hostel selection is
						based on preference and availability. Your preferred hostel choice
						does not guarantee allocation to that specific hostel. Final
						allocation will be confirmed after payment processing.</span>
				</div>

				<h:form id="hostelForm">
					<p:growl sticky="true" globalOnly="true" id="global_msg"></p:growl>

					<div class="form-grid">
						<!-- First Name (Read-only) -->
						<div class="form-field">
							<label class="form-label" for="firstName"> First Name </label>
							<div class="input-wrapper">
								<p:inputText id="firstName"
									value="#{userBean.currentUser.firstName}" readonly="true"
									styleClass="ui-inputfield readonly-field" />
							</div>
						</div>

						<!-- Last Name (Read-only) -->
						<div class="form-field">
							<label class="form-label" for="lastName"> Last Name </label>
							<div class="input-wrapper">
								<p:inputText id="lastName"
									value="#{userBean.currentUser.lastName}" readonly="true"
									styleClass="ui-inputfield readonly-field" />
							</div>
						</div>

						<!-- Department (Read-only) -->
						<div class="form-field">
							<label class="form-label" for="department">
								Department/Course </label>
							<div class="input-wrapper">
								<p:inputText id="department"
									value="#{userBean.currentUser.department}" readonly="true"
									styleClass="ui-inputfield readonly-field" />
							</div>
						</div>

						<!-- Level (Read-only) -->
						<div class="form-field">
							<label class="form-label" for="level"> Current Level </label>
							<div class="input-wrapper">
								<p:inputText id="level"
									value="#{userBean.currentUser.level} Level" readonly="true"
									styleClass="ui-inputfield readonly-field" />
							</div>
						</div>

						<!-- Gender (Read-only) -->
						<div class="form-field">
							<label class="form-label" for="gender"> Gender </label>
							<div class="input-wrapper">
								<p:inputText id="gender" value="#{userBean.currentUser.gender}"
									readonly="true" styleClass="ui-inputfield readonly-field" />
							</div>
						</div>

						<!-- Matric Number (Read-only) -->
						<div class="form-field">
							<label class="form-label" for="matricNumber">
								Matriculation Number </label>
							<div class="input-wrapper">
								<p:inputText id="matricNumber"
									value="#{userBean.currentUser.matricNumber}" readonly="true"
									styleClass="ui-inputfield readonly-field" />
							</div>
						</div>

						<!-- Preferred Hostel (Selectable) -->
						<div class="form-field full-width">
							<label class="form-label" for="preferredHostel">
								Preferred Hostel <span class="required-asterisk">*</span>
							</label>

							<div class="input-wrapper">
								<p:selectOneMenu id="preferredHostel"
									value="#{userBean.hostelId}" required="true"
									requiredMessage="Please select your preferred hostel"
									styleClass="ui-selectonemenu">

									<f:selectItem itemLabel="Choose your preferred hostel"
										itemValue="0" noSelectionOption="true" />

									<f:selectItems value="#{userBean.availableHostels}"
										var="hostel"
										itemLabel="#{hostel.name} (#{hostel.type}) - ‚Ç¶#{hostel.amount}"
										itemValue="#{hostel.id}" />

									<p:ajax event="change"
										update="hostelAmount,paymentBtn,roomTypeContainer,note"
										listener="#{userBean.onHostelChange}"
										process="preferredHostel" />

								</p:selectOneMenu>

								<p:message for="preferredHostel" display="text" />
							</div>
						</div>

						<!-- Room Type Container - Always present in DOM -->
						<p:outputPanel id="roomTypeContainer" layout="block"
							styleClass="form-field full-width"
							style="#{userBean.selectedHostel == null ? 'display: none;' : 'display: block;'}">

							<label class="form-label" for="preferredRoomType">
								Preferred Room Type <span class="required-asterisk">*</span>
							</label>

							<div class="input-wrapper">
								<p:selectOneMenu id="preferredRoomType"
									value="#{userBean.selectedRoomId}"
									required="#{userBean.selectedHostel != null}"
									requiredMessage="Please select your preferred room type"
									styleClass="ui-selectonemenu">

									<f:selectItem itemLabel="random room" itemValue="0" />

									<!-- You need to update this to use proper room types for the selected hostel -->
									<f:selectItems value="#{userBean.availableRooms}" var="room"
										itemLabel="#{room.description} (#{room.size} students ) - ‚Ç¶#{room.amount}"
										itemValue="#{room.id}" />

									<p:ajax event="change" update="hostelAmount,paymentBtn"
										listener="#{userBean.onRoomTypeChange}"
										process="preferredRoomType" />
								</p:selectOneMenu>

								<p:message for="preferredRoomType" display="text" />
							</div>
						</p:outputPanel>

						<!-- Hostel Amount (Auto-updated) -->
						<div class="form-field full-width">
							<label class="form-label" for="hostelAmount"> Hostel Fee
							</label>
							<div class="input-wrapper">
								<p:inputText id="hostelAmount"
									value="‚Ç¶#{userBean.selectedHostelAmount}" readonly="true"
									styleClass="ui-inputfield amount-display"
									placeholder="Select a hostel to see the fee" />
							</div>
						</div>
					</div>

					<!-- Payment Section -->
					<div class="payment-section">
						<h3 class="payment-title">Payment</h3>
						<p:commandButton id="paymentBtn" value="Make Payment"
							action="#{userBean.processPayment}" update="hostelForm"
							styleClass="payment-btn" icon="pi pi-credit-card" iconPos="left"
							disabled="#{userBean.selectedHostel == null or userBean.selectedHostel == ''}" />
						<p:outputLabel class="payment-note" id="note" value="#{userBean.paymentText}"></p:outputLabel>
					</div>

				</h:form>
			</div>
		</ui:define>
	</ui:composition>
</h:body>
</html>